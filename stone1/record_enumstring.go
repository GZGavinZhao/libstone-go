// Code generated by "stringer -linecomment -type=MetaTag,DependencyKind,FileType -output record_enumstring.go"; DO NOT EDIT.

package stone1

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Name-1]
	_ = x[Architecture-2]
	_ = x[Version-3]
	_ = x[Summary-4]
	_ = x[Description-5]
	_ = x[Homepage-6]
	_ = x[SourceID-7]
	_ = x[Depends-8]
	_ = x[Provides-9]
	_ = x[Conflicts-10]
	_ = x[Release-11]
	_ = x[License-12]
	_ = x[BuildRelease-13]
	_ = x[PackageURI-14]
	_ = x[PackageHash-15]
	_ = x[PackageSize-16]
	_ = x[BuildDepends-17]
	_ = x[SourceURI-18]
	_ = x[SourcePath-19]
	_ = x[SourceRef-20]
}

const _MetaTag_name = "NameArchitectureVersionSummaryDescriptionHomepageSource IDDependsProvidesConflictsReleaseLicenseBuild releasePackage URIPackage hashPackage sizeBuild dependenciesSource URISource pathSource ref"

var _MetaTag_index = [...]uint8{0, 4, 16, 23, 30, 41, 49, 58, 65, 73, 82, 89, 96, 109, 120, 132, 144, 162, 172, 183, 193}

func (i MetaTag) String() string {
	i -= 1
	if i >= MetaTag(len(_MetaTag_index)-1) {
		return "MetaTag(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _MetaTag_name[_MetaTag_index[i]:_MetaTag_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PackageName-0]
	_ = x[SharedLibary-1]
	_ = x[PkgConfig-2]
	_ = x[Interpreter-3]
	_ = x[CMake-4]
	_ = x[Python-5]
	_ = x[BinaryDep-6]
	_ = x[SystemBinary-7]
	_ = x[PkgConfig32-8]
}

const _DependencyKind_name = "namesonamepkgconfiginterpretercmakepythonbinarysysbinarypkgconfig32"

var _DependencyKind_index = [...]uint8{0, 4, 10, 19, 30, 35, 41, 47, 56, 67}

func (i DependencyKind) String() string {
	if i >= DependencyKind(len(_DependencyKind_index)-1) {
		return "DependencyKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DependencyKind_name[_DependencyKind_index[i]:_DependencyKind_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Regular-1]
	_ = x[Symlink-2]
	_ = x[Directory-3]
	_ = x[CharacterDevice-4]
	_ = x[BlockDevice-5]
	_ = x[FIFO-6]
	_ = x[Socket-7]
}

const _FileType_name = "RegularSymlinkDirectoryCharacter deviceBlock deviceFIFOSocket"

var _FileType_index = [...]uint8{0, 7, 14, 23, 39, 51, 55, 61}

func (i FileType) String() string {
	i -= 1
	if i >= FileType(len(_FileType_index)-1) {
		return "FileType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FileType_name[_FileType_index[i]:_FileType_index[i+1]]
}
